#!/bin/sh

# ----------------------------------------------------------------------
# reorder
# ----------------------------------------------------------------------
#
# Reorder record fields, where each field is a line, and the
# records are separated by blank lines.
#
# For example:
#
#   'reorder 3 1 2 4 5' permutes the first five fields of each record 
#   as follows and ignores the rest:
# 
#     3 -> 1
#     1 -> 2
#     2 -> 3
#     4 -> 4
#     5 -> 5
#
#   'reorder 1 3' selects fields 1 and 3.
#
#   'reorder 3 1' selects fields 1 and 3 in reverse order.
#
# If a field number refers to a field that does not exist, then
# the field is treated as blank (~). For example, 'reorder 2 1'
# applied to a file containing the lines
#
#   A
# 
#   B
#
# yields
#
#   ~
#   A
#
#   ~
#   B
#
# ----------------------------------------------------------------------

usage() {
  echo 'usage: reorder -v' >&2
  echo '       reorder [rows]' >&2
  exit 1
}

while :; do
  case $1 in
    -v|--version)
      echo 'reorder version 1.0'
      exit 0 ;;
    --)
      shift
      break ;;
    -?*)
      usage ;;
    *)
      break ;;
  esac
  shift
done

tmp=`mktemp tmp.XXXX`

echo 'BEGIN {
  RS=""; FS="\\n"
}

{' > $tmp
for arg in "$@"
do
  echo '  if ($'$arg' == "")' >> $tmp
  echo '    print "~"' >> $tmp
  echo '  else' >> $tmp
  echo '    print $'$arg >> $tmp
done
  echo '  print ""' >> $tmp
echo '}' >> $tmp

awk -f $tmp

rm $tmp
